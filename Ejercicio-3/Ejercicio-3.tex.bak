\input{../Informe/Header.tex}
\input{karnaugh-map.tex}
\begin{document}

\subsection{Introducción}

Se quiso implementar la siguiente máquina de estados finitos:

\begin{figure}[H]
\centering
\includegraphics[width=0.6\textwidth]{ImagenesEjercicio3/fsm.png}
\caption{Máquina de estados finitos a implementar.}
\label{fig:fsm}
\end{figure} 

Para esto, se conformó la tabla de estados considerando al estado $00$ como el inicial, resultando:

\begin{table}[H]
\centering
\begin{tabular}{|c|l|c|l|c|l|c|}
\hline
\multicolumn{2}{|c|}{\multirow{2}{*}{$Present State$}} & \multicolumn{4}{c|}{$Next State$} & \multirow{3}{*}{$Output (z)$} \\ \cline{3-6}
\multicolumn{2}{|c|}{} & \multicolumn{2}{c|}{$w=0$} & \multicolumn{2}{c|}{$w=1$} &  \\
\multicolumn{2}{|c|}{$y_2 y_1$} & \multicolumn{2}{c|}{$Y_2Y_1$} & \multicolumn{2}{c|}{$Y_2Y_1$} &  \\ \hline
\multicolumn{2}{|c|}{00} & \multicolumn{2}{c|}{00} & \multicolumn{2}{c|}{01} & 0 \\ \hline
\multicolumn{2}{|c|}{01} & \multicolumn{2}{c|}{00} & \multicolumn{2}{c|}{10} & 1 \\ \hline
\multicolumn{2}{|c|}{10} & \multicolumn{2}{c|}{00} & \multicolumn{2}{c|}{10} & 0 \\ \hline
\multicolumn{2}{|c|}{11} & \multicolumn{2}{c|}{xx} & \multicolumn{2}{c|}{xx} & x \\ \hline
\end{tabular}
\caption{Tabla de estados para la máquina de estados finita a implementar.}
\label{fig:tablaestados}
\end{table}

Como fue necesario implementar tres estados se requirió utilizar dos flip-flops. Luego, se hallaron las fórmulas lógicas para los estados siguientes utilizando mapas de karnaugh.

\begin{figure}[H]
\begin{subfigure}{0.49\textwidth}
\begin{centering}
    \begin{Karnaughvuit}
        \minterms{5, 6}
        \maxterms{0,1,2,4}
        \indeterminats{7, 3}
        
        \implicant{5}{7}{orange}
        \implicant{7}{6}{blue}
        
    \end{Karnaughvuit}
\par\end{centering}
\begin{equation*}
Y_2 = wy_1+wy_2
\end{equation*}
\begin{table}[H]
\caption{Solución para $Y_2.$}
\label{mapa:Y2}
\end{table}
\end{subfigure}
\begin{subfigure}{0.49\textwidth}
\begin{centering}
    \begin{Karnaughvuit}
        \minterms{4}
        \maxterms{0,1,2,5,6}
        \indeterminats{7,3}
        
        \implicantsol{4}{green}
        
    \end{Karnaughvuit}
\par\end{centering}
\begin{equation*}
Y_1 = w(\overline{y_2}\cdot \overline{y_1})
\end{equation*}
\begin{table}[H]
\caption{Solución para $Y_1.$}
\label{mapa:Y1}
\end{table}
\end{subfigure}
\caption{Mapas de Karnaugh para los próximos estados de la maquina de estados finitos.}
\end{figure}

Utilizando el teorema de DeMorgan y simplificando se obtienen dos posibles implementaciones análogas:
\begin{figure}[H]
\begin{subfigure}{0.49\textwidth}
\vspace*{-0.17cm}
\begin{equation*}
\left.\left\{
\begin{aligned}
		& Y_1 = w(\overline{y_2}\cdot \overline{y_1})	 \\		
		& Y_2 = w\overline{(\overline{y_2}\cdot \overline{y_1})}\\		
\end{aligned}
\right.\right\}
\end{equation*}
\caption{Implementación con NAND.}
\end{subfigure}
\begin{subfigure}{0.49\textwidth}
\begin{equation*}
\left.\left\{
\begin{aligned}
		& Y_1 = w(\overline{y_2+y_1}) \\		
		& Y_2 = w(y_2+y_1)\\		
\end{aligned}
\right.\right\}
\end{equation*}
\caption{Implementación con AND y NOR.}
\end{subfigure}
\end{figure}

Si este circuito fuese trabajado directamente sobre el silicio, se elegiría la implementación con NAND ya que sería la más simple de realizar. Sin embargo, como se contruirá un PCB, se decidió utilizar la implementación con AND y NOR ya que se deberían de utilizar solamente dos integrados para el circuito lógico de entrada y salida, a diferencia de la implementación con NAND, que requeriría de tres integrados (utilizando un total de nueve NAND's). Finalmente, a partir de las ecuaciones obtenidas se esquematizó la implementación teórica.

\begin{figure}[H]
	\hspace*{1cm}
	\centering
	\begin{circuitikz}
		\draw
			
			(0,0)
			node[fourport](FF1){}
				(FF1.1) ++ (0.12,0) node[]{\scalebox{1.2}{\rotatebox{-90}{$\triangle$}}}
				 ++ (-0.12,0) node[](FF1_CLK){}
				(FF1.2) ++ (-0.25, 0) node[](){$\overline{y_1}$}
				node[](FF1_2){}
				(FF1.3) ++ (-0.25, 0) node[](){$y_1$}
				node[](FF1_3){}
				(FF1.4) ++ (0.25, 0) node[](){$Y_1$}
				node[](FF1_4){}
				(FF1_CLK) to[short] ++ (-0.5, 0)
					node[](FF1_CLK){}
				(FF1.3) to[short] ++ (0.5, 0)
					node[](FF1_y){}
				(FF1.4) to[short] ++ (-0.5, 0)
					node[](FF1_Y){}
					
				
			(0,-3)
			node[fourport](FF2){}
				(FF2.1) ++ (0.12,0) node[]{\scalebox{1.2}{\rotatebox{-90}{$\triangle$}}}
				 ++ (-0.12,0) node[](FF2_CLK){}
				(FF2.2) ++ (-0.25, 0) node[](){$\overline{y_2}$}
				node[](FF2_-y){}
				(FF2.3) ++ (-0.25, 0) node[](){$y_2$}
				node[](FF2_y){}
				(FF2.4) ++ (0.25, 0) node[](){$Y_2$}
				node[](FF2_Y){}
				(FF2_CLK) to[short] ++ (-0.5, 0)
					node[](FF2_CLK){}
				(FF2.2) to[short] ++ (0.5, 0)
					node[](FF2_-y){}
				(FF2.3) to[short] ++ (1, 0)
					node[](FF2_y){}
				(FF2.4) to[short] ++ (-0.5, 0)
					node[](FF2_Y){}		
					
					
			(-4, -4)node[ocirc, label=west:$CLK$](CLK){}
				(CLK) to[short] ++ (2.5,0) |-(FF2_CLK.center)
				(CLK) to[open, -*]++(2.5, 0.55) |-(FF1_CLK.center)
				
			(FF1_Y) ++ (-0.5, 0) node[and port, xscale=0.7, yscale=0.7](and1){}
			(and1.in 1) ++ (-0.5, 0) node[nor port, xscale=0.7, yscale=0.7](nor1){}
			
			(FF2_Y) ++ (-0.5, 0) node[and port, xscale=0.7, yscale=0.7](and2){}
			(and2.in 2) ++ (-0.5, 0) node[nor port, xscale=0.7, yscale=0.7](nor2){}
			(and2.in 2) ++ (-2, 0) node[nor port, xscale=0.7, yscale=0.7](nor3){}
		
			(-4, -1)node[ocirc, label=west:$w$](w){}
			(w)-|(and1.in 2)
			(w)-|(and2.in 1)
			
			(nor2.in 1) -- (nor2.in 2)
			(nor2.in 1) to[open, -*] ++ (0, -0.2) -- (nor3.out)
			(and2.in 2) -- (nor2.out)
			(and1.in 1) -- (nor1.out)
			(and1.out) -- (FF1_Y.center)
			(and2.out) -- (FF2_Y.center)
			
			(4, -1.5) node[and port, xscale=0.7, yscale=0.7](andout){}
			(FF2_-y) to[short]++(1, 0) |- (andout.in 2)

			(FF1_y)to[short]++(0, 1)to[short]++(-8,0)
				to[short, -*]++(0, -0.6)node[](aux){}
				(aux.center)--(nor1.in 1)
				(aux.center)|-(nor3.in 1)
				
			(FF2_y)to[short]++(0, -2)to[short]++(-8,0)|-(nor3.in 2)
			++(-0.25, 0) node[circ]{} |- (nor1.in 2)
			
			(FF1_y.center)node[circ]{}to[short]++(1, 0)|-(andout.in 1)
			(andout.out)to[short, -o] ++ (0.5, 0) node[label=east:$z$]{}
		;
	\end{circuitikz}
	\caption{Implementación teórica de la lógica de entrada, estados y lógica de salida de la máquina de estados finitos a implementar.}
\end{figure}

\subsection{Simulación}

Se simuló la implementación obtenida en la sección anterior utilizando $Verilog$, un lenguaje descriptivo de hardware. Además, se construyó un test bench con todas las combinaciones posibles de entradas. Esta simulación obtuvo resultados exitosos. Se encuentra anexada esta simulación junto al test bench y un ejecutable junto a este informe.

\subsection{Implementación}
Para esta etapa se debió tener un cuidado especial dado que era un requisito en la implementación que la lógica interna del circuito funcione con $3.3V$ mientras que las entradas y salidas debían operar con $5V$.
\subsubsection{Level Shifting}
Para la conversión de $3V3$ a $5V$ de la salida se decidió utilizar un trasistor bipolar NPN como indica la Figura (\ref{circ:stepup}). Luego, para la entradas, las cuales debían pasar de $5V$ a $3V3$ se utilizó un diodo zener de $3V3$ con una resistencia limitadora de corriente calculada conociendo la corriente de codo del diodo y la corriente de entrada de las compuertas de tecnología CMOS utilizadas. Esta implementación se puede observar en la Figura(\ref{circ:stepdown}). 

\begin{figure}[H]

	\centering
	\begin{subfigure}{0.49\textwidth}
		\centering
		\begin{circuitikz}
			\draw
			(0,0)
			node[ocirc, label=west:$In$](in){}
			++(2, 0) node[npn, rotate=-90](npn){}
			(npn.B) ++ (0, 2)node[ocirc, label=north:$3V3$](3v3){}
			(3v3)to[R=$2k2$]++(0, -2)
			(3v3)++(2, 0)node[ocirc, label=north:$5V$](5v){}
			(5v)to[R=$6k8$]++(0, -2)to[short, -*]++(0, -0.83)
			(npn.C) to[short]++(2.5, 0)node[ocirc, label=east:$Out$]{}
			(npn.E)--(in.center)			
			;
		\end{circuitikz}
		\caption{\centering Transistor BJT NPN en configuración base común utilizado como step-up level-shifter.}
		\label{circ:stepup}
	\end{subfigure}
	\begin{subfigure}{0.49\textwidth}
	\centering
	\begin{circuitikz}
			\draw
				(0,0)
				node[ocirc, label=west:$In$]{}
				to[R, l^=$100\Omega$]++(2.5,0)
				to[open]++(0, -2)
				node[tlground]{}
				to[full ZZener diode, l_=$3V3$, -*] ++ (0, 2)
				
				to[short] ++ (1, 0)
				node[ocirc, label=east:$Out$]{}
				%%%%%%%%%%%%%%%%%%%%%%%%%%
				to[open]++(0, 1.45)
			;
		\end{circuitikz}
		\caption{\centering Regulador de tensión de $3V3$ con diodo zener y resistencia utilizado como step-down level-shifter.}
		\label{circ:stepdown}
	\end{subfigure}

\end{figure}

\subsubsection{Diseño Final}

Finalmente se presenta a continuación el diseño final de la máquina de estados finitos implementada en un PCB de $50mmx50mm$.

\begin{figure}[H]
	\hspace*{-0.6cm}
	\centering
	\scalebox{0.85}{
	\begin{circuitikz}
		\draw
			
			(0,0)
			node[fourport](FF1){}
				(FF1.1) ++ (0.12,0) node[]{\scalebox{1.2}{\rotatebox{-90}{$\triangle$}}}
				 ++ (-0.12,0) node[](FF1_CLK){}
				(FF1.2) ++ (-0.25, 0) node[](){$\overline{y_1}$}
				node[](FF1_2){}
				(FF1.3) ++ (-0.25, 0) node[](){$y_1$}
				node[](FF1_3){}
				(FF1.4) ++ (0.25, 0) node[](){$Y_1$}
				node[](FF1_4){}
				(FF1_CLK) to[short] ++ (-0.5, 0)
					node[](FF1_CLK){}
				(FF1.3) to[short] ++ (0.5, 0)
					node[](FF1_y){}
				(FF1.4) to[short] ++ (-0.5, 0)
					node[](FF1_Y){}
					
				
			(0,-3)
			node[fourport](FF2){}
				(FF2.1) ++ (0.12,0) node[]{\scalebox{1.2}{\rotatebox{-90}{$\triangle$}}}
				 ++ (-0.12,0) node[](FF2_CLK){}
				(FF2.2) ++ (-0.25, 0) node[](){$\overline{y_2}$}
				node[](FF2_-y){}
				(FF2.3) ++ (-0.25, 0) node[](){$y_2$}
				node[](FF2_y){}
				(FF2.4) ++ (0.25, 0) node[](){$Y_2$}
				node[](FF2_Y){}
				(FF2_CLK) to[short] ++ (-0.5, 0)
					node[](FF2_CLK){}
				(FF2.2) to[short] ++ (0.5, 0)
					node[](FF2_-y){}
				(FF2.3) to[short] ++ (1, 0)
					node[](FF2_y){}
				(FF2.4) to[short] ++ (-0.5, 0)
					node[](FF2_Y){}		
					
					
			(-4, -4)node[label=north:$CLK'$](CLK){}
				(CLK) to[short] ++ (2.5,0) |-(FF2_CLK.center)
				(CLK) to[open, -*]++(2.5, 0.55) |-(FF1_CLK.center)
				
			(FF1_Y) ++ (-0.5, 0) node[and port, xscale=0.7, yscale=0.7](and1){}
			(and1.in 1) ++ (-0.5, 0) node[nor port, xscale=0.7, yscale=0.7](nor1){}
			
			(FF2_Y) ++ (-0.5, 0) node[and port, xscale=0.7, yscale=0.7](and2){}
			(and2.in 2) ++ (-0.5, 0) node[nor port, xscale=0.7, yscale=0.7](nor2){}
			(and2.in 2) ++ (-2, 0) node[nor port, xscale=0.7, yscale=0.7](nor3){}
		
			(-4, -1)node[label=north:$w'$](w){}
			(w)-|(and1.in 2)
			(w)-|(and2.in 1)
			
			(nor2.in 1) -- (nor2.in 2)
			(nor2.in 1) to[open, -*] ++ (0, -0.2) -- (nor3.out)
			(and2.in 2) -- (nor2.out)
			(and1.in 1) -- (nor1.out)
			(and1.out) -- (FF1_Y.center)
			(and2.out) -- (FF2_Y.center)
			
			(4, -1.5) node[and port, xscale=0.7, yscale=0.7](andout){}
			(FF2_-y) to[short]++(1, 0) |- (andout.in 2)

			(FF1_y)to[short]++(0, 1)to[short]++(-8,0)
				to[short, -*]++(0, -0.6)node[](aux){}
				(aux.center)--(nor1.in 1)
				(aux.center)|-(nor3.in 1)
				
			(FF2_y)to[short]++(0, -2)to[short]++(-8,0)|-(nor3.in 2)
			++(-0.25, 0) node[circ]{} |- (nor1.in 2)
			
			(FF1_y.center)node[circ]{}to[short]++(1, 0)|-(andout.in 1)
			(andout.out)to[short] ++ (0.5, 0) node[label=north:$z'$]{}

			
			(andout.out)
			node[](in){}
			++(1.5, 0) node[npn, rotate=-90](npn){}
			(npn.B) ++ (0, 2)node[](3v3){}
			(3v3)to[R=$2k2$]++(0, -2)
			(3v3)++(2, 0)node[](5v){}
			(5v)to[R=$6k8$]++(0, -2)to[short, -*]++(0, -0.83)
			(npn.C) to[short]++(2.5, 0)node[ocirc, label=east:$z$]{}
			(npn.E)--(in.center)
						
			(w)++(-7, 0)			
				node[label=west:$w$]{}
				to[R, l^=$100\Omega$]++(3,0)
				to[open]++(0, -2)
				node[tlground]{}
				to[full ZZener diode, l_=$3V3$, -*] ++ (0, 2)
				to[short]++(4.12,0)
				
			(CLK)++(-7, 0)			
				node[label=west:$CLK$]{}
				to[R, l^=$100\Omega$]++(3,0)
				to[open]++(0, -2)
				node[tlground]{}
				to[full ZZener diode, l_=$3V3$, -*] ++ (0, 2)
				to[short]++(4.12,0)
				
			(w) ++ (0, 3) ++(-7, 0)			
				node[label=west:$5V$]{}
				to[R, l^=$100\Omega$]++(3,0)
				to[open]++(0, -2)
				node[tlground]{}
				to[full ZZener diode, l_=$3V3$, -*] ++ (0, 2)
				node[](aux2){}
				to[short]++(0, 0.5)
				to[open]++(0, -0.5)
				to[short]++(13.62,0)
				to[short]++(0, -0.65)
				(aux2)to[short]++(0, 0.75)to[short]++(1, 0)node[ocirc, label=east:$3V3$]{}
			(w) ++ (0, 3) ++(-6.5, 0) to[short]++(0, 1.5)to[short]++(18.12, 0)to[short]++(0, -2.15)
		;
	\end{circuitikz}
	}
	\caption{Implementación de la máquina de estados finitos junto a la conversión de niveles de tensión.}
\end{figure}

\subsubsection{Componentes}
A continuación se detallan los componentes utilizados en la implementación:
\begin{itemize}
\item Dual Flip-flop D: \href{http://www.ti.com/lit/ds/symlink/cd4013b.pdf}{CD4013}
\item Quad 2-input AND: \href{https://www.mouser.com/datasheet/2/308/74HC08.REV1-102589.pdf}{74HC08}
\item Quad 2-input NOR: \href{https://assets.nexperia.com/documents/data-sheet/74HC_HCT02.pdf}{74HC02}
\item BJT NPN: \href{http://www.philohome.com/sensors/gp2d12/gp2d12-datasheets/bc548.pdf}{BC548}
\end{itemize}

\subsection{Mediciones}

Se realizaron mediciones de tanto correcta transición entre estados como de niveles de tensión en el circuito.

\begin{figure}[H]
\begin{subfigure}{0.49\textwidth}
\centering
\includegraphics[width=\textwidth,trim={0 3.35cm 0.1cm 1.75cm},clip]{ImagenesEjercicio3/states.png}
\caption{Medición de transiciones de estados: ..00-01-10-...-10-00-..}
\label{states1}
\end{subfigure}
\begin{subfigure}{0.49\textwidth}
\centering
\includegraphics[width=\textwidth,trim={0 3.35cm 0.1cm 1.75cm},clip]{ImagenesEjercicio3/vlevels_states.png}
\caption{Medición de los niveles de tensión.}
\end{subfigure}
\caption{Mediciones del circuito implementado.}
\end{figure}

\begin{figure}[H]
\centering
\includegraphics[width=0.7\textwidth,trim={0 3.35cm 0.1cm 1.75cm},clip]{ImagenesEjercicio3/states2.png}
\caption{Medición de la transición de estados: ..00-01-00-..}
\label{states2}
\end{figure}

\begin{figure}[H]
\begin{subfigure}{0.49\textwidth}
\centering
\includegraphics[width=\textwidth,trim={0 3.35cm 0.1cm 1.75cm},clip]{ImagenesEjercicio3/output.png}
\caption{Medición de la transición de la salida del circuito.}
\label{output}
\end{subfigure}
\begin{subfigure}{0.49\textwidth}
\centering
\includegraphics[width=\textwidth,trim={0 3.35cm 0.1cm 1.75cm},clip]{ImagenesEjercicio3/vlevels_low.png}
\caption{Medición de los niveles de tensión en estado bajo..}
\end{subfigure}
\caption{Mediciones del circuito implementado.}
\end{figure}

Se puede observar que el level shifting de niveles de tensión funcionan correctamente. Los niveles de tensión son:
\begin{itemize}
\item $V_{OL} = 10mV$
\item $V_{OH} = 4.8V$
\item $V_{3V3_{H}} = \geq 3.1V$
\item $V_{3V3_{L}} = \approx 0$
\end{itemize}
siendo $V_{3V3}$ el nivel de tensión de la lógica interna del circuito y $V_{OL}$ y $V_{OH}$ los niveles de tensión altos y bajos conseguidos a la salida $Z$.

Luego, se observa en las Figuras (\ref{states1}) y (\ref{states2}) que la transición de estados funciona correctamente habiendo probado todas las combinaciones posibles, y en la Figura (\ref{output}) se observa que la salida posee los valores correctos, siendo cero para todos los estados excepto en el estado $01$ en el cual la salida es igual a un uno lógico. 
El consumo de corriente del circuito es de $15mA$ en todos los estados excepto en el estado $01$ con un consumo de $32mA$.

\subsection{Conclusiones}

Se implementó la FSM propuesta habiendo cumplido los requisitos de niveles de tensión de lógica interna. Si bien la transición de $5V$ a $3V3$ funcionó correctamente, el consumo de corriente es muy elevado siendo este como máximo $32mA$. Si se hubiera querido un consumo menor, se debebería de haber utilizado step-down level-shifters utilizando transistores como se realizó para el step-up level-shifter. Este logró mantener la salida en una tensión muy baja para el estado lógico bajo y en una tensión aceptable para el estado de tensión lógico alto, con un error de $200mV$ por debajo del deseado. Sin embargo, estos niveles de tensión se encuentran totalmente dentro de estándares de márgenes de ruido tanto para la tecnología TTL como para CMOS. Luego, la tensión alta de la lógica interna de $3.1V$ se encuentra también dentro de los márgenes de ruido para ambas tecnologías.


Otras posibles implementaciones para el step-down hubieran sido el uso de un divisor resistivo, lo cual hubiera disminuido mucho el consumo de corriente ya que los valores de resistencias utilizadas posibles hubieran sido cómodamente de unos $10k\Omega$ o más, ya que estos valores no eran lo suficiente altos ni como para generar un divisor resistivo con la impedancia de entrada de la compuerta CMOS ni para generar una corriente comparable con el consumo de estas compuertas. Otra implementación hubiera sido el uso de un comparador ya que este era más barato que un transistor, pero se descartó por su gran tamaño y por poseer implementaciones más simples con mismo resultado.

Finalmente, se concluye que un posible uso de esta maquina de estados implementada es la de obtener un solo pulso a la salida dado el accionar de un botón, teniendo que dejar de oprimir este botón y volver a apretarlo para poder obtener siempre un solo pulso de longitud de un pulso de clock a la salida. Varias modificaciones pueden ser realizadas a esta máquina de estados para obtener otros posibles usos. Por ejemplo, si se deseara implementar la técnica de debouncing para evitar rebotes mecánicos al momento de accionar una entrada se podría redirigir la salida de $w=0$ en el estado $01$ para que esta continúe hacia el próximo
 

\end{document}